; This file is INTRPXYZ.CMD, the default command file (or parameter file) for
; the program INTRPXYZ.EXE version 1.0.
;
; Last Revision Date: June 27, 1997
;-----------------------------------------------------------------------------
; INTRPXYZ.DOC
;
; INTRPXYZ reads in XYZ data and calculates, using linear or cubic
; spline interpolation, a new set of dependant values.  The independant
; value may be either X, Y, Z, traverse distance, or a position value (as
; the fourth field in the XYZ file).  The interpolated values are saved as
; an XYZ file.
;
; The input to this program is a "CMD" file, an ASCII text file containing
; commands (or parameters).  The CMD file specifies the XYZ input and
; output file names.  Inspect the file INTRPXYZ.CMD for usage.
;
; June 27, 1997
;
; Jeff Lucius
; Geophysicist
; U.S. Geological Survey
; Geologic Division, Branch of Geophysics
; Box 25046  Denver Federal Center  MS 964
; Denver, CO  80225-0046
; 303-236-1413 (office), 303-236-1212 (secretary), 303-236-1425 (fax)
; email: lucius@.usgs.gov
;
;-----------------------------------------------------------------------------
; INTRPXYZ is controlled by a "CMD" file, an ASCII text file containing
; commands and parameters describing how to process, display, and output
; the radar data.  An optional "override" or "global" command file may be
; specified on the command line which will take precedence over values
; found in the other command files.
;
; RULES FOR CONSTRUCTING "INTRPXYZ.CMD" FILES:
;  1. All valid keywords and their defaults are shown here.
;  2. Keywords can be upper, lower, or mixed case.
;  3. Only lines with an equal sign and valid keyword to left of the equal
;       sign will be used.  All OTHERS ARE IGNORED (except for sets of data,
;       see 12 below).  Blank lines are ignored everywhere.
;     NOTE: To effectively remove or unassign a parameter, just remove
;           the equal sign.
;  4. Equal signs don't have to line up.
:  5. Spaces are ignored (and removed) except those within strings and sets
;     of numbers or strings.
;  6. A semicolon begins a comment, except within strings.
;  7. Strings must be enclosed in double quotation marks.
;       Examples: xyz_infilename = "file33.xyz"
;                 out_start      = "INVALID_VALUE"
;                 batch          = "True"
;  8. "TRUE" == 1. "FALSE" == 0.  "INVALID_VALUE" == 1.0E19.
;  9. Sets of numbers or strings must be seperated by a space or a
;       "new line" characters (ie. a cariage return/line feed pair, CR/LF,
;        generated by pressing <Enter>).
; 10. Keywords that expect sets of data end in square brackets.
;      Example: num_out = 3
;               out_indep[] = 1025 3879 3880
;      Example: num_out = 3
;               out_indep[] =
:               1025
;               3879
;               3880
; 11. Keywords can be given in any order, except the num_... keywords which
;       must preceed the arrays, or sets of data, they are describing.
;
; ###########################################################################
; ##  WARNING: If a keyword appears more than once (see subsections of     ##
; ##           SPECIFYING COORDINATE MODE) then the last occurence of the  ##
; ##           keyword is used!                                            ##
; ###########################################################################
;
; 12. Lines should be less than 160 characters long (characters past 159 are
;      ignored).
; 13. Parameters or commands may appear more than once, but usually only the
;       last instance is preserved (ie., earlier values are lost or written
;       over).
;
;-----------------------------------------------------------------------------
;
; The statements below give a commented listing of the default command file.
; The related file INTRPXYZ.CM_ is this same file with most comments
; stripped out.
  ;
  ;*************************** PROGRAM CONTROL *******************************
  ;
  ; NOTE: These parameters only used from the FIRST command file.
  ;
batch        = "FALSE" ; Place program in batch mode (no pauses) if "TRUE".
  ;                      The program may pause at various times waiting for
  ;                      user input.
debug        = "FALSE" ; Place program in debug mode if "TRUE"/
  ;                      In debug mode, the program prints out messages
  ;                      that may be useful in determining the source of
  ;                      a problem.
  ;
  ;************************** SPECIFYING FILES *******************************
  ;
  ; XYZ files have the number of sets stated on the first file record with
  ; the sets listed on the following records.  When assigning the file names
  ; below, remameber to place double quotes before and after the name.
  ;
  ; For example: xyz_infilename = "dataset1.xyz"
  ;
  ; Example of how an XYZ file looks:
  ;
  ;  4
  ;  10.0  10.0  293.456
  ;  20.0  10.0  294.567
  ;  30.0  10.0  295.678
  ;  40.0  10.0  296.123
  ;
  ; This program also allows for a fourth vield to be present in the XYZ
  ; file.  The forth field can be used as the independant value for
  ; interpolating the X-Y-Z fields.  The fourth field could be a position
  ; number or other value.  Extra fields or comments can follow the
  ; three or four fields, the program just reads the first 3 or 4.
  ;
  ; Example of how a modified XYZ file looks:
  ;
  ;  4
  ;  10.0  10.0  293.456  0
  ;  20.0  10.0  294.567  3
  ;  30.0  10.0  295.678  6
  ;  40.0  10.0  296.123  9
  ;
xyz_infilename   = ""  ; input XYZ ASCII file    (VALID VALUE REQUIRED)
  ;
xyz_outfilename  = ""  ; output XYZ ASCII file   (VALID VALUE REQUIRED)
  ;
  ;
  ;************************ INTERPOLATION METHOD *****************************
  ;
  ; At this time 2 methods are available - linear and cubic spline.
  ;
interp_method = 1  ; 1 = linear (default)
  ;                  2 = cubic spline
  ;
  ; Any coordinate or the traverse distance may be selected as the
  ; independant variable to be used for interpolating the remaining 2 or
  ; 3 (for traverse distance) coordinates.  If traverse distance is selected,
  ; then the set of independant values will start at 0 and increment
  ; as positive numbers.  The program assumes that the independant values
  ; either increase or decrease monotonically, that is, the numbers don't
  ; "change directions".  The dependant values can of course be any reasonable
  ; set of numbers.
  ;
indep_value = 0  ; 0 = invalid value (default) (VALID VALUE REQUIRED)
  ;                1 = X coordinate
  ;                2 = Y coordinate
  ;                3 = Z coordinate
  ;                4 = traverse distance
  ;                5 = position value (optional fourth field in the XYZ file)
  ;
  ;******************* DEFINING THE INTERPOLATED LINE ************************
  ;
  ; "num_out" must be assigned a value > 0.  It is the number of independant
  ; values in the line to be interpolated.
  ; After that there are 3 ways to define the independant values:
  ;  1) Leave "out_start", "out_stop", and "out_step" alone and assign
  ;     all values after "out_indep[]".  This is the only way to assign
  ;     values that are not evenly spaced.  Remember to add the equal sign
  ;     after "out_indep[]".  For example:
  ; 			 num_out     = 5
  ;              out_indep[] = 0 1 2 3 4
  ;  2) Use "out_start" and "out_stop" only.  For example:
  ; 			 num_out   = 5
  ;              out_start = 0
  ;              out_stop  = 4
  ;  3) Use "out_start" and "out_step" only.  For example:
  ; 			 num_out   = 5
  ;              out_start = 0
  ;              out_step  = 1
  ; All three methods in these examples result in the same set of values.
  ; The independant coordinate is of course the same for both input and
  ; output lines.
  ;
num_out     = 0               ;                  (VALID VALUE REQUIRED > 0)
out_start   = "INVALID_VALUE" ;
out_stop    = "INVALID_VALUE" ;
out_step    = "INVALID_VALUE" ;
out_indep[]

;************************* END OF FILE INTRPXYZ.CMD **************************
