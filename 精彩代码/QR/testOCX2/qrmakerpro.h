#if !defined(AFX_QRMAKERPRO_H__1EA9D2EC_1B54_4557_AF2E_2042133B7308__INCLUDED_)
#define AFX_QRMAKERPRO_H__1EA9D2EC_1B54_4557_AF2E_2042133B7308__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CPicture;
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CQRmakerPro wrapper class

class CQRmakerPro : public CWnd
{
protected:
	DECLARE_DYNCREATE(CQRmakerPro)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x26aec825, 0xa641, 0x11d4, { 0x96, 0x73, 0x0, 0xc0, 0x4f, 0xcb, 0x6c, 0x59 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	VARIANT GetInputData();
	void SetInputData(const VARIANT&);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	long GetAutoRedraw();
	void SetAutoRedraw(long);
	short GetBend();
	void SetBend(short);
	short GetBstart();
	void SetBstart(short);
	long GetModelNo();
	void SetModelNo(long);
	short GetNumCell();
	void SetNumCell(short);
	CPicture GetPicture();
	void SetPicture(LPDISPATCH);
	short GetCellAdjust();
	void SetCellAdjust(short);
	short GetCellPitch();
	void SetCellPitch(short);
	short GetCellUnit();
	void SetCellUnit(short);
	short GetTextOrBinary();
	void SetTextOrBinary(short);
	VARIANT GetInputDataB();
	void SetInputDataB(const VARIANT&);
	long GetThrowError();
	void SetThrowError(long);
	short GetMakeStatus();
	void SetMakeStatus(short);
	short GetDivide1();
	void SetDivide1(short);
	short GetDivide2();
	void SetDivide2(short);
	long GetEccLevel();
	void SetEccLevel(long);
	short GetQuietZone();
	void SetQuietZone(short);
	long GetRotate();
	void SetRotate(long);
	unsigned long GetForeBColor();
	void SetForeBColor(unsigned long);
	unsigned long GetForeWColor();
	void SetForeWColor(unsigned long);
	long GetGapAdjust();
	void SetGapAdjust(long);
	short GetBarHeight();
	void SetBarHeight(short);
	long GetChrDisplay();
	void SetChrDisplay(long);
	long GetChkDigit();
	void SetChkDigit(long);
	long GetCodeType();
	void SetCodeType(long);
	float GetNwRatio();
	void SetNwRatio(float);
	long GetOptEANUPC();
	void SetOptEANUPC(long);
	long GetOptITF();
	void SetOptITF(long);
	long GetOptSTF();
	void SetOptSTF(long);
	long GetOptCODE128();
	void SetOptCODE128(long);
	long GetOptPLESSEY();
	void SetOptPLESSEY(long);
	float GetImageHeight();
	void SetImageHeight(float);
	float GetImageWidth();
	void SetImageWidth(float);
	COleFont GetFont();
	void SetFont(LPDISPATCH);
	short GetQRversion();
	void SetQRversion(short);
	long GetMaxiCodeMode();
	void SetMaxiCodeMode(long);
	long GetPDF417Model();
	void SetPDF417Model(long);
	long GetPDF417Ecc();
	void SetPDF417Ecc(long);
	long GetDmxModel();
	void SetDmxModel(long);
	short GetPDF417Colum();
	void SetPDF417Colum(short);
	short GetPDF417Row();
	void SetPDF417Row(short);
	short GetPDF417XYratio();
	void SetPDF417XYratio(short);
	long GetPDF417HWratio();
	void SetPDF417HWratio(long);
	short GetNumRow();
	void SetNumRow(short);
	short GetBarChrGap();
	void SetBarChrGap(short);
	VARIANT GetImageData();
	void SetImageData(const VARIANT&);
	VARIANT GetInputDataA();
	void SetInputDataA(const VARIANT&);
	long GetMirror();
	void SetMirror(long);

// Operations
public:
	short CreateQrMetaFile(long hDC, const VARIANT& fileName, short enhancedSw);
	short DrawQrImage(long hDC, long x, long y);
	void Refresh();
	short QrImageCopy(short enhancedSw);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_QRMAKERPRO_H__1EA9D2EC_1B54_4557_AF2E_2042133B7308__INCLUDED_)
